name: Release & Publish

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: >-
      github.event.pull_request.merged == true &&
      contains(join(github.event.pull_request.labels.*.name, ','), 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org/"

      - name: Setup pnpm
        run: |
          corepack enable
          pnpm install

      - name: Determine version bump type
        id: version_bump
        run: |
          labels=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '.[].name')
          if echo "$labels" | grep -q "major"; then
            bump_type="major"
          elif echo "$labels" | grep -q "minor"; then
            bump_type="minor"
          else
            bump_type="patch"
          fi
          echo "type=$bump_type" >> $GITHUB_ENV

      - name: Bump version
        run: |
            npm version ${{ env.type }} --no-git-tag-version
            git config --local user.email "${{ github.actor }}@users.noreply.github.com"
            git config --local user.name "${{ github.actor }}"
            git add package.json
            git commit -m "ACTION: Bump version to $(jq -r .version package.json)"
            git push

      - name: Build package
        run: pnpm build

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"

      - name: Get new version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}