name: Release & Publish

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: >-
      github.event.pull_request.merged == true &&
      contains(join(github.event.pull_request.labels.*.name, ','), 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org/"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup pnpm
        run: |
          corepack enable
          pnpm install
          echo "pnpm setup complete."

      - name: Determine version bump type
        id: version_bump
        run: |
          labels=("${{ join(github.event.pull_request.labels.*.name, ' ') }}")

          if [[ "${labels[@]}" == *patch* ]]; then
            echo "RELEASE_TYPE=patch" >> $GITHUB_ENV
          elif [[ "${labels[@]}" == *minor* ]]; then
            echo "RELEASE_TYPE=minor" >> $GITHUB_ENV
          elif [[ "${labels[@]}" == *major* ]]; then
            echo "RELEASE_TYPE=major" >> $GITHUB_ENV
          else
            echo "No valid release label found. Exiting..."
            exit 1
          fi

      - name: Setup git user
        run: |
          git config user.name "Gaagul"
          git config user.email "gaagulgithub@gmail.com"
          echo "Git user setup complete."

      - name: Bump version
        run: |
          echo "Bumping package version..."
          pnpm version ${{ env.RELEASE_TYPE }} --no-git-tag-version
          git add package.json
          git commit -m "ACTION: Bump version to $(node -p "require('./package.json').version")"
          git push

      - name: Build package
        run: |
          pnpm build
          echo "Package build complete."

      - name: Publish package
        run: |
            echo "Publishing @gaagul/react-auth-kit to npm..."
            pnpm publish --access public --no-git-checks
            env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
      - name: Get new version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}