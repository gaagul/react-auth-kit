name: Release & Publish

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: >-
      github.event.pull_request.merged == true &&
      contains(join(github.event.pull_request.labels.*.name, ','), 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org/"

      - name: Setup pnpm
        run: |
          corepack enable
          pnpm install

      - name: Determine version bump type
        id: version_bump
        run: |
          labels=$(echo '${{ toJson(github.event.pull_request.labels) }}' | jq -r '.[].name')
          if echo "$labels" | grep -q "major"; then
            echo "type=major" >> $GITHUB_ENV
          elif echo "$labels" | grep -q "minor"; then
            echo "type=minor" >> $GITHUB_ENV
          else
            echo "type=patch" >> $GITHUB_ENV
          fi

      - name: Bump version & Generate Changelog
        run: |
          pnpm changeset version
          git add .
          git commit -m "chore: release new version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: pnpm build

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"

      - name: Get new version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
